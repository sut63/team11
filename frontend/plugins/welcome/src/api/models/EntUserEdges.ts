/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntBook,
    EntBookFromJSON,
    EntBookFromJSONTyped,
    EntBookToJSON,
    EntBookborrow,
    EntBookborrowFromJSON,
    EntBookborrowFromJSONTyped,
    EntBookborrowToJSON,
    EntBooking,
    EntBookingFromJSON,
    EntBookingFromJSONTyped,
    EntBookingToJSON,
    EntBookreturn,
    EntBookreturnFromJSON,
    EntBookreturnFromJSONTyped,
    EntBookreturnToJSON,
    EntPreemption,
    EntPreemptionFromJSON,
    EntPreemptionFromJSONTyped,
    EntPreemptionToJSON,
    EntResearch,
    EntResearchFromJSON,
    EntResearchFromJSONTyped,
    EntResearchToJSON,
    EntRole,
    EntRoleFromJSON,
    EntRoleFromJSONTyped,
    EntRoleToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntUserEdges
 */
export interface EntUserEdges {
    /**
     * Addby holds the value of the addby edge.
     * @type {Array<EntBook>}
     * @memberof EntUserEdges
     */
    addby?: Array<EntBook>;
    /**
     * Booking holds the value of the booking edge.
     * @type {Array<EntBooking>}
     * @memberof EntUserEdges
     */
    booking?: Array<EntBooking>;
    /**
     * Borrow holds the value of the borrow edge.
     * @type {Array<EntBookborrow>}
     * @memberof EntUserEdges
     */
    borrow?: Array<EntBookborrow>;
    /**
     * 
     * @type {EntRole}
     * @memberof EntUserEdges
     */
    position?: EntRole;
    /**
     * Preemption holds the value of the preemption edge.
     * @type {Array<EntPreemption>}
     * @memberof EntUserEdges
     */
    preemption?: Array<EntPreemption>;
    /**
     * Record holds the value of the record edge.
     * @type {Array<EntResearch>}
     * @memberof EntUserEdges
     */
    record?: Array<EntResearch>;
    /**
     * Return holds the value of the return edge.
     * @type {Array<EntBookreturn>}
     * @memberof EntUserEdges
     */
    _return?: Array<EntBookreturn>;
}

export function EntUserEdgesFromJSON(json: any): EntUserEdges {
    return EntUserEdgesFromJSONTyped(json, false);
}

export function EntUserEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntUserEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addby': !exists(json, 'addby') ? undefined : ((json['addby'] as Array<any>).map(EntBookFromJSON)),
        'booking': !exists(json, 'booking') ? undefined : ((json['booking'] as Array<any>).map(EntBookingFromJSON)),
        'borrow': !exists(json, 'borrow') ? undefined : ((json['borrow'] as Array<any>).map(EntBookborrowFromJSON)),
        'position': !exists(json, 'Position') ? undefined : EntRoleFromJSON(json['Position']),
        'preemption': !exists(json, 'preemption') ? undefined : ((json['preemption'] as Array<any>).map(EntPreemptionFromJSON)),
        'record': !exists(json, 'record') ? undefined : ((json['record'] as Array<any>).map(EntResearchFromJSON)),
        '_return': !exists(json, 'return') ? undefined : ((json['return'] as Array<any>).map(EntBookreturnFromJSON)),
    };
}

export function EntUserEdgesToJSON(value?: EntUserEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'addby': value.addby === undefined ? undefined : ((value.addby as Array<any>).map(EntBookToJSON)),
        'booking': value.booking === undefined ? undefined : ((value.booking as Array<any>).map(EntBookingToJSON)),
        'borrow': value.borrow === undefined ? undefined : ((value.borrow as Array<any>).map(EntBookborrowToJSON)),
        'position': EntRoleToJSON(value.position),
        'preemption': value.preemption === undefined ? undefined : ((value.preemption as Array<any>).map(EntPreemptionToJSON)),
        'record': value.record === undefined ? undefined : ((value.record as Array<any>).map(EntResearchToJSON)),
        'return': value._return === undefined ? undefined : ((value._return as Array<any>).map(EntBookreturnToJSON)),
    };
}


