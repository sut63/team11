// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/team11/app/ent/author"
	"github.com/team11/app/ent/book"
	"github.com/team11/app/ent/bookborrow"
	"github.com/team11/app/ent/booking"
	"github.com/team11/app/ent/bookreturn"
	"github.com/team11/app/ent/category"
	"github.com/team11/app/ent/cliententity"
	"github.com/team11/app/ent/location"
	"github.com/team11/app/ent/preemption"
	"github.com/team11/app/ent/research"
	"github.com/team11/app/ent/researchtype"
	"github.com/team11/app/ent/role"
	"github.com/team11/app/ent/roominfo"
	"github.com/team11/app/ent/schema"
	"github.com/team11/app/ent/servicepoint"
	"github.com/team11/app/ent/status"
	"github.com/team11/app/ent/user"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	authorFields := schema.Author{}.Fields()
	_ = authorFields
	// authorDescName is the schema descriptor for Name field.
	authorDescName := authorFields[0].Descriptor()
	// author.NameValidator is a validator for the "Name" field. It is called by the builders before save.
	author.NameValidator = authorDescName.Validators[0].(func(string) error)
	bookFields := schema.Book{}.Fields()
	_ = bookFields
	// bookDescBookName is the schema descriptor for BookName field.
	bookDescBookName := bookFields[0].Descriptor()
	// book.BookNameValidator is a validator for the "BookName" field. It is called by the builders before save.
	book.BookNameValidator = bookDescBookName.Validators[0].(func(string) error)
	bookborrowFields := schema.Bookborrow{}.Fields()
	_ = bookborrowFields
	// bookborrowDescBORROWDATE is the schema descriptor for BORROW_DATE field.
	bookborrowDescBORROWDATE := bookborrowFields[0].Descriptor()
	// bookborrow.DefaultBORROWDATE holds the default value on creation for the BORROW_DATE field.
	bookborrow.DefaultBORROWDATE = bookborrowDescBORROWDATE.Default.(func() time.Time)
	bookingFields := schema.Booking{}.Fields()
	_ = bookingFields
	// bookingDescBOOKINGDATE is the schema descriptor for BOOKING_DATE field.
	bookingDescBOOKINGDATE := bookingFields[0].Descriptor()
	// booking.DefaultBOOKINGDATE holds the default value on creation for the BOOKING_DATE field.
	booking.DefaultBOOKINGDATE = bookingDescBOOKINGDATE.Default.(func() time.Time)
	// bookingDescUSERNUMBER is the schema descriptor for USER_NUMBER field.
	bookingDescUSERNUMBER := bookingFields[2].Descriptor()
	// booking.USERNUMBERValidator is a validator for the "USER_NUMBER" field. It is called by the builders before save.
	booking.USERNUMBERValidator = bookingDescUSERNUMBER.Validators[0].(func(int) error)
	// bookingDescBORROWITEM is the schema descriptor for BORROW_ITEM field.
	bookingDescBORROWITEM := bookingFields[3].Descriptor()
	// booking.BORROWITEMValidator is a validator for the "BORROW_ITEM" field. It is called by the builders before save.
	booking.BORROWITEMValidator = bookingDescBORROWITEM.Validators[0].(func(int) error)
	// bookingDescPHONENUMBER is the schema descriptor for PHONE_NUMBER field.
	bookingDescPHONENUMBER := bookingFields[4].Descriptor()
	// booking.PHONENUMBERValidator is a validator for the "PHONE_NUMBER" field. It is called by the builders before save.
	booking.PHONENUMBERValidator = bookingDescPHONENUMBER.Validators[0].(func(string) error)
	bookreturnFields := schema.Bookreturn{}.Fields()
	_ = bookreturnFields
	// bookreturnDescDAMAGEDPOINT is the schema descriptor for DAMAGED_POINT field.
	bookreturnDescDAMAGEDPOINT := bookreturnFields[1].Descriptor()
	// bookreturn.DAMAGEDPOINTValidator is a validator for the "DAMAGED_POINT" field. It is called by the builders before save.
	bookreturn.DAMAGEDPOINTValidator = bookreturnDescDAMAGEDPOINT.Validators[0].(func(int) error)
	// bookreturnDescDAMAGEDPOINTNAME is the schema descriptor for DAMAGED_POINTNAME field.
	bookreturnDescDAMAGEDPOINTNAME := bookreturnFields[2].Descriptor()
	// bookreturn.DAMAGEDPOINTNAMEValidator is a validator for the "DAMAGED_POINTNAME" field. It is called by the builders before save.
	bookreturn.DAMAGEDPOINTNAMEValidator = bookreturnDescDAMAGEDPOINTNAME.Validators[0].(func(string) error)
	// bookreturnDescLOST is the schema descriptor for LOST field.
	bookreturnDescLOST := bookreturnFields[3].Descriptor()
	// bookreturn.LOSTValidator is a validator for the "LOST" field. It is called by the builders before save.
	bookreturn.LOSTValidator = func() func(string) error {
		validators := bookreturnDescLOST.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(_LOST string) error {
			for _, fn := range fns {
				if err := fn(_LOST); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescCategoryName is the schema descriptor for CategoryName field.
	categoryDescCategoryName := categoryFields[0].Descriptor()
	// category.CategoryNameValidator is a validator for the "CategoryName" field. It is called by the builders before save.
	category.CategoryNameValidator = categoryDescCategoryName.Validators[0].(func(string) error)
	cliententityFields := schema.ClientEntity{}.Fields()
	_ = cliententityFields
	// cliententityDescCLIENTNAME is the schema descriptor for CLIENT_NAME field.
	cliententityDescCLIENTNAME := cliententityFields[0].Descriptor()
	// cliententity.CLIENTNAMEValidator is a validator for the "CLIENT_NAME" field. It is called by the builders before save.
	cliententity.CLIENTNAMEValidator = cliententityDescCLIENTNAME.Validators[0].(func(string) error)
	locationFields := schema.Location{}.Fields()
	_ = locationFields
	// locationDescLOCATIONNAME is the schema descriptor for LOCATION_NAME field.
	locationDescLOCATIONNAME := locationFields[0].Descriptor()
	// location.LOCATIONNAMEValidator is a validator for the "LOCATION_NAME" field. It is called by the builders before save.
	location.LOCATIONNAMEValidator = locationDescLOCATIONNAME.Validators[0].(func(string) error)
	preemptionFields := schema.Preemption{}.Fields()
	_ = preemptionFields
	// preemptionDescPreemptTime is the schema descriptor for PreemptTime field.
	preemptionDescPreemptTime := preemptionFields[0].Descriptor()
	// preemption.DefaultPreemptTime holds the default value on creation for the PreemptTime field.
	preemption.DefaultPreemptTime = preemptionDescPreemptTime.Default.(func() time.Time)
	researchFields := schema.Research{}.Fields()
	_ = researchFields
	// researchDescDOCNAME is the schema descriptor for DOC_NAME field.
	researchDescDOCNAME := researchFields[0].Descriptor()
	// research.DOCNAMEValidator is a validator for the "DOC_NAME" field. It is called by the builders before save.
	research.DOCNAMEValidator = researchDescDOCNAME.Validators[0].(func(string) error)
	// researchDescDATE is the schema descriptor for DATE field.
	researchDescDATE := researchFields[1].Descriptor()
	// research.DefaultDATE holds the default value on creation for the DATE field.
	research.DefaultDATE = researchDescDATE.Default.(func() time.Time)
	researchtypeFields := schema.Researchtype{}.Fields()
	_ = researchtypeFields
	// researchtypeDescTYPENAME is the schema descriptor for TYPE_NAME field.
	researchtypeDescTYPENAME := researchtypeFields[0].Descriptor()
	// researchtype.TYPENAMEValidator is a validator for the "TYPE_NAME" field. It is called by the builders before save.
	researchtype.TYPENAMEValidator = researchtypeDescTYPENAME.Validators[0].(func(string) error)
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescROLENAME is the schema descriptor for ROLE_NAME field.
	roleDescROLENAME := roleFields[0].Descriptor()
	// role.ROLENAMEValidator is a validator for the "ROLE_NAME" field. It is called by the builders before save.
	role.ROLENAMEValidator = roleDescROLENAME.Validators[0].(func(string) error)
	roominfoFields := schema.Roominfo{}.Fields()
	_ = roominfoFields
	// roominfoDescRoomNo is the schema descriptor for RoomNo field.
	roominfoDescRoomNo := roominfoFields[1].Descriptor()
	// roominfo.RoomNoValidator is a validator for the "RoomNo" field. It is called by the builders before save.
	roominfo.RoomNoValidator = roominfoDescRoomNo.Validators[0].(func(string) error)
	// roominfoDescRoomType is the schema descriptor for RoomType field.
	roominfoDescRoomType := roominfoFields[2].Descriptor()
	// roominfo.RoomTypeValidator is a validator for the "RoomType" field. It is called by the builders before save.
	roominfo.RoomTypeValidator = roominfoDescRoomType.Validators[0].(func(string) error)
	// roominfoDescRoomTime is the schema descriptor for RoomTime field.
	roominfoDescRoomTime := roominfoFields[3].Descriptor()
	// roominfo.RoomTimeValidator is a validator for the "RoomTime" field. It is called by the builders before save.
	roominfo.RoomTimeValidator = roominfoDescRoomTime.Validators[0].(func(string) error)
	// roominfoDescRoomStatus is the schema descriptor for RoomStatus field.
	roominfoDescRoomStatus := roominfoFields[4].Descriptor()
	// roominfo.RoomStatusValidator is a validator for the "RoomStatus" field. It is called by the builders before save.
	roominfo.RoomStatusValidator = roominfoDescRoomStatus.Validators[0].(func(string) error)
	servicepointFields := schema.ServicePoint{}.Fields()
	_ = servicepointFields
	// servicepointDescCOUNTERNUMBER is the schema descriptor for COUNTER_NUMBER field.
	servicepointDescCOUNTERNUMBER := servicepointFields[0].Descriptor()
	// servicepoint.COUNTERNUMBERValidator is a validator for the "COUNTER_NUMBER" field. It is called by the builders before save.
	servicepoint.COUNTERNUMBERValidator = servicepointDescCOUNTERNUMBER.Validators[0].(func(string) error)
	statusFields := schema.Status{}.Fields()
	_ = statusFields
	// statusDescSTATUSNAME is the schema descriptor for STATUS_NAME field.
	statusDescSTATUSNAME := statusFields[0].Descriptor()
	// status.STATUSNAMEValidator is a validator for the "STATUS_NAME" field. It is called by the builders before save.
	status.STATUSNAMEValidator = statusDescSTATUSNAME.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUSEREMAIL is the schema descriptor for USER_EMAIL field.
	userDescUSEREMAIL := userFields[0].Descriptor()
	// user.USEREMAILValidator is a validator for the "USER_EMAIL" field. It is called by the builders before save.
	user.USEREMAILValidator = userDescUSEREMAIL.Validators[0].(func(string) error)
	// userDescUSERNAME is the schema descriptor for USER_NAME field.
	userDescUSERNAME := userFields[1].Descriptor()
	// user.USERNAMEValidator is a validator for the "USER_NAME" field. It is called by the builders before save.
	user.USERNAMEValidator = userDescUSERNAME.Validators[0].(func(string) error)
	// userDescPASSWORD is the schema descriptor for PASSWORD field.
	userDescPASSWORD := userFields[2].Descriptor()
	// user.PASSWORDValidator is a validator for the "PASSWORD" field. It is called by the builders before save.
	user.PASSWORDValidator = userDescPASSWORD.Validators[0].(func(string) error)
}
