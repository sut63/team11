// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/Authors": {
            "get": {
                "description": "list author entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List author entities",
                "operationId": "list-author",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Author"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create author",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create author",
                "operationId": "create-author",
                "parameters": [
                    {
                        "description": "Author entity",
                        "name": "author",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Author"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Author"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/Authors/{id}": {
            "get": {
                "description": "get author by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a author entity by ID",
                "operationId": "get-author",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Author"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update author by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a author entity by ID",
                "operationId": "update-author",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Author entity",
                        "name": "author",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Author"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Author"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get author by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a author entity by ID",
                "operationId": "delete-author",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/ResearchTypes": {
            "get": {
                "description": "list researchtype entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List researchtype entities",
                "operationId": "list-researchtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Researchtype"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create researchtype",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create researchtype",
                "operationId": "create-researchtype",
                "parameters": [
                    {
                        "description": "Researchtype entity",
                        "name": "researchtype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Researchtype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Researchtype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/ResearchTypes/{id}": {
            "get": {
                "description": "get researchtype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a researchtype entity by ID",
                "operationId": "get-researchtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Researchtype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Researchtype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update researchtype by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a researchtype entity by ID",
                "operationId": "update-researchtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Researchtype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Researchtype entity",
                        "name": "researchtype",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Researchtype"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Researchtype"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get researchtype by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a researchtype entity by ID",
                "operationId": "delete-researchtype",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Researchtype ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bookborrows": {
            "get": {
                "description": "list bookborrow entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List bookborrow entities",
                "operationId": "list-bookborrow",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Bookborrow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create bookborrow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create bookborrow",
                "operationId": "create-bookborrow",
                "parameters": [
                    {
                        "description": "Bookborrow entity",
                        "name": "bookborrow",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Bookborrow"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Bookborrow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bookborrows/{id}": {
            "get": {
                "description": "get bookborrow by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a bookborrow entity by ID",
                "operationId": "get-bookborrow",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bookborrow ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Bookborrow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update bookborrow by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a bookborrow entity by ID",
                "operationId": "update-bookborrow",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bookborrow ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Bookborrow entity",
                        "name": "bookborrow",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Bookborrow"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Bookborrow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get bookborrow by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a bookborrow entity by ID",
                "operationId": "delete-bookborrow",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bookborrow ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bookborrowusers/{id}": {
            "get": {
                "description": "get bookborrowuser by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a bookborrowuser entity by ID",
                "operationId": "get-bookborrowuser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bookborrowuser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Bookborrow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bookings": {
            "get": {
                "description": "list booking entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List booking entities",
                "operationId": "list-booking",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Booking"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create booking",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create booking",
                "operationId": "create-booking",
                "parameters": [
                    {
                        "description": "Booking entity",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Booking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Booking"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bookings/{id}": {
            "get": {
                "description": "get booking by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a booking entity by ID",
                "operationId": "get-booking",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Booking"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update booking by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a booking entity by ID",
                "operationId": "update-booking",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Booking entity",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Booking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Booking"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get booking by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a booking entity by ID",
                "operationId": "delete-booking",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bookreturns": {
            "get": {
                "description": "list bookreturn entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List bookreturn entities",
                "operationId": "list-bookreturn",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Bookreturn"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create bookreturn",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create bookreturn",
                "operationId": "create-bookreturn",
                "parameters": [
                    {
                        "description": "bookreturn entity",
                        "name": "bookreturn",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Bookreturn"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Bookreturn"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/bookreturns/{id}": {
            "get": {
                "description": "get bookreturn by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a bookreturn entity by ID",
                "operationId": "get-bookreturn",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bookreturn ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Bookreturn"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get bookreturn by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a bookreturn entity by ID",
                "operationId": "delete-bookreturn",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bookreturn ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/books": {
            "get": {
                "description": "list book entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List book entities",
                "operationId": "list-book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Book"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create book",
                "operationId": "create-book",
                "parameters": [
                    {
                        "description": "Book entity",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Book"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/books/{id}": {
            "get": {
                "description": "get book by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a book entity bygo mod  ID",
                "operationId": "get-book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Book"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update book by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a book entity by ID",
                "operationId": "update-book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Book entity",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Book"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Book"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get book by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a book entity by ID",
                "operationId": "delete-book",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/categorys": {
            "get": {
                "description": "list category entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List category entities",
                "operationId": "list-category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Category"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create category",
                "operationId": "create-category",
                "parameters": [
                    {
                        "description": "Category entity",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/categorys/{id}": {
            "get": {
                "description": "get category by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a category entity by ID",
                "operationId": "get-category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update category by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a category entity by ID",
                "operationId": "update-category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category entity",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get category by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a category entity by ID",
                "operationId": "delete-category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/cliententitys": {
            "get": {
                "description": "list cliententity entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List cliententity entities",
                "operationId": "list-cliententity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ClientEntity"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create cliententity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create cliententity",
                "operationId": "create-cliententity",
                "parameters": [
                    {
                        "description": "ClientEntity entity",
                        "name": "cliententity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ClientEntity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ClientEntity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/cliententitys/{id}": {
            "get": {
                "description": "get cliententity by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a cliententity entity by ID",
                "operationId": "get-cliententity",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ClientEntity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ClientEntity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update cliententity by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a cliententity entity by ID",
                "operationId": "update-cliententity",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ClientEntity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ClientEntity entity",
                        "name": "cliententity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ClientEntity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ClientEntity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get cliententity by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a cliententity entity by ID",
                "operationId": "delete-cliententity",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cliententity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/locations": {
            "get": {
                "description": "list location entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List location entities",
                "operationId": "list-location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Location"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create location",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create location",
                "operationId": "create-location",
                "parameters": [
                    {
                        "description": "location entity",
                        "name": "Location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Location"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/locations/{id}": {
            "get": {
                "description": "get location by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a locationr entity by ID",
                "operationId": "get-location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update location by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a location entity by ID",
                "operationId": "update-location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location entity",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Location"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Location"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get location by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a location entity by ID",
                "operationId": "delete-location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Location ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/preemptions": {
            "get": {
                "description": "list Preemption entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List preemption entities",
                "operationId": "list-preemption",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Preemption"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create preemption",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create preemption",
                "operationId": "create-preemption",
                "parameters": [
                    {
                        "description": "Preemption entity",
                        "name": "preemption",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Preemption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Preemption"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/preemptions/{id}": {
            "get": {
                "description": "get preemption by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a preemption entity by ID",
                "operationId": "get-preemption",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Preemption ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Preemption"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/purposes": {
            "get": {
                "description": "list purpose entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List purpose entities",
                "operationId": "list-purpose",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Purpose"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/purposes/{id}": {
            "get": {
                "description": "get purpose by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a purpose entity by ID",
                "operationId": "get-purpose",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Purpose ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Purpose"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/researches": {
            "get": {
                "description": "list research entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List research entities",
                "operationId": "list-research",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Research"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create research",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create research",
                "operationId": "create-research",
                "parameters": [
                    {
                        "description": "Research entity",
                        "name": "research",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.Research"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Research"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/researches/{id}": {
            "get": {
                "description": "get research by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a research entity by ID",
                "operationId": "get-rearch",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Research ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Research"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update research by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a research entity by ID",
                "operationId": "update-research",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Research ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Research entity",
                        "name": "research",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Research"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Research"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get research by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a research entity by ID",
                "operationId": "delete-research",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Research ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "description": "list role entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List role entities",
                "operationId": "list-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Role"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create role",
                "operationId": "create-role",
                "parameters": [
                    {
                        "description": "Role entity",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "description": "get role by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a role entity by ID",
                "operationId": "get-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update role by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a role entity by ID",
                "operationId": "update-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role entity",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get role by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a role entity by ID",
                "operationId": "delete-role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roominfos": {
            "get": {
                "description": "list roominfo entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List roominfo entities",
                "operationId": "list-roominfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Roominfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/roominfos/{id}": {
            "get": {
                "description": "get roominfo by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a roominfo entity by ID",
                "operationId": "get-roominfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roominfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Roominfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update roominfo by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a roominfo entity by ID",
                "operationId": "update-roominfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roominfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Roominfo entity",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Roominfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Roominfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get roominfo by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a roominfo entity by ID",
                "operationId": "delete-roominfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Roominfo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/servicepoints": {
            "get": {
                "description": "list servicepoint entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List servicepoint entities",
                "operationId": "list-servicepoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ServicePoint"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create servicepoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create servicepoint",
                "operationId": "create-servicepoint",
                "parameters": [
                    {
                        "description": "ServicePoint entity",
                        "name": "ent.servicepoint",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ServicePoint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ServicePoint"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/servicepoints/{id}": {
            "get": {
                "description": "get servicepoint by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a servicepoint entity by ID",
                "operationId": "get-servicepoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ServicePoint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ServicePoint"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update servicepoint by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a servicepoint entity by ID",
                "operationId": "update-servicepoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ServicePoint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ServicePoint entity",
                        "name": "servicepoint",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ServicePoint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ServicePoint"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get servicepoint by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a servicepoint entity by ID",
                "operationId": "delete-servicepoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ServicePoint ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statuss": {
            "get": {
                "description": "list status entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List status entities",
                "operationId": "list-status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Status"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create status",
                "operationId": "create-status",
                "parameters": [
                    {
                        "description": "Status entity",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Status"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/statuss/{id}": {
            "get": {
                "description": "get status by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a status entity by ID",
                "operationId": "get-status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Status ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update status by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a status entity by ID",
                "operationId": "update-status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Status ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status entity",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.Status"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get status by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a status entity by ID",
                "operationId": "delete-status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Status ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "list user entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List user entities",
                "operationId": "list-user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create user",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "User entity",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "get user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a user entity by ID",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a user entity by ID",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User entity",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get user by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a user entity by ID",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.Book": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "integer"
                },
                "barCode": {
                    "type": "string"
                },
                "bookPage": {
                    "type": "integer"
                },
                "bookname": {
                    "type": "string"
                },
                "category": {
                    "type": "integer"
                },
                "userid": {
                    "type": "integer"
                }
            }
        },
        "controllers.Bookborrow": {
            "type": "object",
            "properties": {
                "bookID": {
                    "type": "integer"
                },
                "borrowDate": {
                    "type": "string"
                },
                "dayOfBorrow": {
                    "type": "integer"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "pickup": {
                    "type": "string"
                },
                "servicePointID": {
                    "type": "integer"
                },
                "statusID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "controllers.Booking": {
            "type": "object",
            "properties": {
                "borrowItem": {
                    "type": "integer"
                },
                "client": {
                    "type": "integer"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "servicePoint": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                },
                "userNumber": {
                    "type": "integer"
                }
            }
        },
        "controllers.Bookreturn": {
            "type": "object",
            "properties": {
                "bookborrowID": {
                    "type": "integer"
                },
                "damagedPoint": {
                    "type": "integer"
                },
                "damagedPointName": {
                    "type": "string"
                },
                "locationID": {
                    "type": "integer"
                },
                "lost": {
                    "type": "string"
                },
                "returnTime": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "controllers.ClientEntity": {
            "type": "object",
            "properties": {
                "sid": {
                    "type": "integer"
                }
            }
        },
        "controllers.Preemption": {
            "type": "object",
            "properties": {
                "otherpeopleid": {
                    "type": "string"
                },
                "otherpeoplephone": {
                    "type": "string"
                },
                "phoneuser": {
                    "type": "string"
                },
                "purpose": {
                    "type": "integer"
                },
                "roominfo": {
                    "type": "integer"
                },
                "user": {
                    "type": "integer"
                }
            }
        },
        "controllers.Research": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "docType": {
                    "type": "integer"
                },
                "docname": {
                    "type": "string"
                },
                "myDoc": {
                    "type": "integer"
                },
                "pagenumber": {
                    "type": "integer"
                },
                "register": {
                    "type": "integer"
                },
                "yearnumber": {
                    "type": "integer"
                }
            }
        },
        "ent.Author": {
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name holds the value of the \"Name\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the AuthorQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.AuthorEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.AuthorEdges": {
            "type": "object",
            "properties": {
                "owner": {
                    "description": "Owner holds the value of the owner edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Research"
                    }
                },
                "writer": {
                    "description": "Writer holds the value of the writer edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Book"
                    }
                }
            }
        },
        "ent.Book": {
            "type": "object",
            "properties": {
                "Barcode": {
                    "description": "Barcode holds the value of the \"Barcode\" field.",
                    "type": "string"
                },
                "BookName": {
                    "description": "BookName holds the value of the \"BookName\" field.",
                    "type": "string"
                },
                "BookPage": {
                    "description": "BookPage holds the value of the \"BookPage\" field.",
                    "type": "integer"
                },
                "author_ID": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BookQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BookEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "status_ID": {
                    "type": "integer"
                },
                "user_ID": {
                    "type": "integer"
                }
            }
        },
        "ent.BookEdges": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "Author holds the value of the author edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Author"
                },
                "booklist": {
                    "description": "Booklist holds the value of the booklist edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bookborrow"
                    }
                },
                "category": {
                    "description": "Category holds the value of the category edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Category"
                },
                "status": {
                    "description": "Status holds the value of the status edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Status"
                },
                "user": {
                    "description": "User holds the value of the user edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Bookborrow": {
            "type": "object",
            "properties": {
                "BORROW_DATE": {
                    "description": "BORROWDATE holds the value of the \"BORROW_DATE\" field.",
                    "type": "string"
                },
                "DAY_OF_BORROW": {
                    "description": "DAYOFBORROW holds the value of the \"DAY_OF_BORROW\" field.",
                    "type": "integer"
                },
                "PHONE_NUMBER": {
                    "description": "PHONENUMBER holds the value of the \"PHONE_NUMBER\" field.",
                    "type": "string"
                },
                "PICKUP": {
                    "description": "PICKUP holds the value of the \"PICKUP\" field.",
                    "type": "string"
                },
                "book_ID": {
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BookborrowQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BookborrowEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "servicepoint_ID": {
                    "type": "integer"
                },
                "status_ID": {
                    "type": "integer"
                },
                "user_ID": {
                    "type": "integer"
                }
            }
        },
        "ent.BookborrowEdges": {
            "type": "object",
            "properties": {
                "book": {
                    "description": "BOOK holds the value of the BOOK edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Book"
                },
                "borrowed": {
                    "description": "Borrowed holds the value of the borrowed edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bookreturn"
                    }
                },
                "servicepoint": {
                    "description": "SERVICEPOINT holds the value of the SERVICEPOINT edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ServicePoint"
                },
                "status": {
                    "description": "STATUS holds the value of the STATUS edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Status"
                },
                "user": {
                    "description": "USER holds the value of the USER edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Booking": {
            "type": "object",
            "properties": {
                "BOOKING_DATE": {
                    "description": "BOOKINGDATE holds the value of the \"BOOKING_DATE\" field.",
                    "type": "string"
                },
                "BORROW_ITEM": {
                    "description": "BORROWITEM holds the value of the \"BORROW_ITEM\" field.",
                    "type": "integer"
                },
                "PHONE_NUMBER": {
                    "description": "PHONENUMBER holds the value of the \"PHONE_NUMBER\" field.",
                    "type": "string"
                },
                "TIME_LEFT": {
                    "description": "TIMELEFT holds the value of the \"TIME_LEFT\" field.",
                    "type": "string"
                },
                "USER_NUMBER": {
                    "description": "USERNUMBER holds the value of the \"USER_NUMBER\" field.",
                    "type": "integer"
                },
                "client_ID": {
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BookingQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BookingEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "servicepoint_ID": {
                    "type": "integer"
                },
                "user_ID": {
                    "type": "integer"
                }
            }
        },
        "ent.BookingEdges": {
            "type": "object",
            "properties": {
                "getservice": {
                    "description": "Getservice holds the value of the getservice edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ServicePoint"
                },
                "usedby": {
                    "description": "Usedby holds the value of the usedby edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                },
                "using": {
                    "description": "Using holds the value of the using edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClientEntity"
                }
            }
        },
        "ent.Bookreturn": {
            "type": "object",
            "properties": {
                "DAMAGED_POINT": {
                    "description": "DAMAGEDPOINT holds the value of the \"DAMAGED_POINT\" field.",
                    "type": "integer"
                },
                "DAMAGED_POINTNAME": {
                    "description": "DAMAGEDPOINTNAME holds the value of the \"DAMAGED_POINTNAME\" field.",
                    "type": "string"
                },
                "LOST": {
                    "description": "LOST holds the value of the \"LOST\" field.",
                    "type": "string"
                },
                "RETURN_TIME": {
                    "description": "RETURNTIME holds the value of the \"RETURN_TIME\" field.",
                    "type": "string"
                },
                "client_ID": {
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the BookreturnQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.BookreturnEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "location_ID": {
                    "type": "integer"
                },
                "user_ID": {
                    "type": "integer"
                }
            }
        },
        "ent.BookreturnEdges": {
            "type": "object",
            "properties": {
                "location": {
                    "description": "Location holds the value of the location edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Location"
                },
                "mustreturn": {
                    "description": "Mustreturn holds the value of the mustreturn edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Bookborrow"
                },
                "user": {
                    "description": "User holds the value of the user edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Category": {
            "type": "object",
            "properties": {
                "CategoryName": {
                    "description": "CategoryName holds the value of the \"CategoryName\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CategoryQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CategoryEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.CategoryEdges": {
            "type": "object",
            "properties": {
                "catof": {
                    "description": "Catof holds the value of the catof edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Book"
                    }
                }
            }
        },
        "ent.ClientEntity": {
            "type": "object",
            "properties": {
                "CLIENT_NAME": {
                    "description": "CLIENTNAME holds the value of the \"CLIENT_NAME\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ClientEntityQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ClientEntityEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "status_ID": {
                    "type": "integer"
                }
            }
        },
        "ent.ClientEntityEdges": {
            "type": "object",
            "properties": {
                "booked": {
                    "description": "Booked holds the value of the booked edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Booking"
                    }
                },
                "state": {
                    "description": "State holds the value of the state edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Status"
                }
            }
        },
        "ent.Location": {
            "type": "object",
            "properties": {
                "LOCATION_NAME": {
                    "description": "LOCATIONNAME holds the value of the \"LOCATION_NAME\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the LocationQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.LocationEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.LocationEdges": {
            "type": "object",
            "properties": {
                "returnfrom": {
                    "description": "Returnfrom holds the value of the returnfrom edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bookreturn"
                    }
                }
            }
        },
        "ent.Preemption": {
            "type": "object",
            "properties": {
                "Phonenumber": {
                    "description": "Phonenumber holds the value of the \"Phonenumber\" field.",
                    "type": "string"
                },
                "PreemptTime": {
                    "description": "PreemptTime holds the value of the \"PreemptTime\" field.",
                    "type": "string"
                },
                "Surrogateid": {
                    "description": "Surrogateid holds the value of the \"Surrogateid\" field.",
                    "type": "string"
                },
                "Surrogatephone": {
                    "description": "Surrogatephone holds the value of the \"Surrogatephone\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PreemptionQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PreemptionEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "purposeID": {
                    "type": "integer"
                },
                "roomID": {
                    "type": "integer"
                },
                "user_ID": {
                    "type": "integer"
                }
            }
        },
        "ent.PreemptionEdges": {
            "type": "object",
            "properties": {
                "purposeID": {
                    "description": "PurposeID holds the value of the PurposeID edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Purpose"
                },
                "roomID": {
                    "description": "RoomID holds the value of the RoomID edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Roominfo"
                },
                "userID": {
                    "description": "UserID holds the value of the User_ID edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Purpose": {
            "type": "object",
            "properties": {
                "PurposeName": {
                    "description": "PurposeName holds the value of the \"PurposeName\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PurposeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PurposeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.PurposeEdges": {
            "type": "object",
            "properties": {
                "preemption": {
                    "description": "Preemption holds the value of the preemption edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Preemption"
                    }
                }
            }
        },
        "ent.Research": {
            "type": "object",
            "properties": {
                "DATE": {
                    "description": "DATE holds the value of the \"DATE\" field.",
                    "type": "string"
                },
                "DOC_NAME": {
                    "description": "DOCNAME holds the value of the \"DOC_NAME\" field.",
                    "type": "string"
                },
                "PAGE_NUMBER": {
                    "description": "PAGENUMBER holds the value of the \"PAGE_NUMBER\" field.",
                    "type": "integer"
                },
                "YEAR_NUMBER": {
                    "description": "YEARNUMBER holds the value of the \"YEAR_NUMBER\" field.",
                    "type": "integer"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ResearchQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ResearchEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "owner_ID": {
                    "type": "integer"
                },
                "type_ID": {
                    "type": "integer"
                },
                "user_ID": {
                    "type": "integer"
                }
            }
        },
        "ent.ResearchEdges": {
            "type": "object",
            "properties": {
                "docType": {
                    "description": "DocType holds the value of the docType edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Researchtype"
                },
                "myDoc": {
                    "description": "MyDoc holds the value of the myDoc edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Author"
                },
                "register": {
                    "description": "Register holds the value of the register edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.User"
                }
            }
        },
        "ent.Researchtype": {
            "type": "object",
            "properties": {
                "TYPE_NAME": {
                    "description": "TYPENAME holds the value of the \"TYPE_NAME\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ResearchtypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ResearchtypeEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ResearchtypeEdges": {
            "type": "object",
            "properties": {
                "researchType": {
                    "description": "ResearchType holds the value of the researchType edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Research"
                    }
                }
            }
        },
        "ent.Role": {
            "type": "object",
            "properties": {
                "ROLE_NAME": {
                    "description": "ROLENAME holds the value of the \"ROLE_NAME\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RoleQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RoleEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.RoleEdges": {
            "type": "object",
            "properties": {
                "role": {
                    "description": "Role holds the value of the role edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.User"
                    }
                }
            }
        },
        "ent.Roominfo": {
            "type": "object",
            "properties": {
                "RoomID": {
                    "description": "RoomID holds the value of the \"RoomID\" field.",
                    "type": "string"
                },
                "RoomNo": {
                    "description": "RoomNo holds the value of the \"RoomNo\" field.",
                    "type": "string"
                },
                "RoomStatus": {
                    "description": "RoomStatus holds the value of the \"RoomStatus\" field.",
                    "type": "string"
                },
                "RoomTime": {
                    "description": "RoomTime holds the value of the \"RoomTime\" field.",
                    "type": "string"
                },
                "RoomType": {
                    "description": "RoomType holds the value of the \"RoomType\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the RoominfoQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.RoominfoEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.RoominfoEdges": {
            "type": "object",
            "properties": {
                "preemption": {
                    "description": "Preemption holds the value of the preemption edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Preemption"
                    }
                }
            }
        },
        "ent.ServicePoint": {
            "type": "object",
            "properties": {
                "COUNTER_NUMBER": {
                    "description": "COUNTERNUMBER holds the value of the \"COUNTER_NUMBER\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ServicePointQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ServicePointEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.ServicePointEdges": {
            "type": "object",
            "properties": {
                "from": {
                    "description": "From holds the value of the from edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bookborrow"
                    }
                },
                "servicepoint": {
                    "description": "Servicepoint holds the value of the servicepoint edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Booking"
                    }
                }
            }
        },
        "ent.Status": {
            "type": "object",
            "properties": {
                "STATUS_NAME": {
                    "description": "STATUSNAME holds the value of the \"STATUS_NAME\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StatusQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.StatusEdges": {
            "type": "object",
            "properties": {
                "status": {
                    "description": "Status holds the value of the status edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.ClientEntity"
                    }
                },
                "statusbookborrow": {
                    "description": "Statusbookborrow holds the value of the statusbookborrow edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bookborrow"
                    }
                },
                "statusofbook": {
                    "description": "Statusofbook holds the value of the statusofbook edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Book"
                    }
                }
            }
        },
        "ent.User": {
            "type": "object",
            "properties": {
                "PASSWORD": {
                    "description": "PASSWORD holds the value of the \"PASSWORD\" field.",
                    "type": "string"
                },
                "USER_EMAIL": {
                    "description": "USEREMAIL holds the value of the \"USER_EMAIL\" field.",
                    "type": "string"
                },
                "USER_NAME": {
                    "description": "USERNAME holds the value of the \"USER_NAME\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the UserQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.UserEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "role_ID": {
                    "type": "integer"
                }
            }
        },
        "ent.UserEdges": {
            "type": "object",
            "properties": {
                "addby": {
                    "description": "Addby holds the value of the addby edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Book"
                    }
                },
                "booking": {
                    "description": "Booking holds the value of the booking edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Booking"
                    }
                },
                "borrow": {
                    "description": "Borrow holds the value of the borrow edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bookborrow"
                    }
                },
                "position": {
                    "description": "Position holds the value of the position edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Role"
                },
                "preemption": {
                    "description": "Preemption holds the value of the preemption edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Preemption"
                    }
                },
                "record": {
                    "description": "Record holds the value of the record edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Research"
                    }
                },
                "return": {
                    "description": "Return holds the value of the return edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Bookreturn"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "SUT SA Example API Playlist Vidoe",
	Description: "This is a sample server for SUT SE 2563",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
