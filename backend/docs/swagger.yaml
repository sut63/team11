basePath: /api/v1
definitions:
  controllers.Book:
    properties:
      author:
        type: integer
      barCode:
        type: string
      bookPage:
        type: integer
      bookname:
        type: string
      category:
        type: integer
      userid:
        type: integer
    type: object
  controllers.Bookborrow:
    properties:
      bookID:
        type: integer
      borrowDate:
        type: string
      dayOfBorrow:
        type: integer
      phoneNumber:
        type: string
      pickup:
        type: string
      servicePointID:
        type: integer
      statusID:
        type: integer
      userID:
        type: integer
    type: object
  controllers.Booking:
    properties:
      borrowItem:
        type: integer
      client:
        type: integer
      phoneNumber:
        type: string
      servicePoint:
        type: integer
      user:
        type: integer
      userNumber:
        type: integer
    type: object
  controllers.Bookreturn:
    properties:
      bookborrowID:
        type: integer
      damagedPoint:
        type: integer
      damagedPointName:
        type: string
      locationID:
        type: integer
      lost:
        type: string
      returnTime:
        type: string
      userID:
        type: integer
    type: object
  controllers.ClientEntity:
    properties:
      sid:
        type: integer
    type: object
  controllers.Preemption:
    properties:
      otherpeopleid:
        type: string
      otherpeoplephone:
        type: string
      phoneuser:
        type: string
      purpose:
        type: integer
      roominfo:
        type: integer
      user:
        type: integer
      username:
        type: string
    type: object
  controllers.Research:
    properties:
      date:
        type: string
      docType:
        type: integer
      docname:
        type: string
      myDoc:
        type: integer
      pagenumber:
        type: integer
      register:
        type: integer
      yearnumber:
        type: integer
    type: object
  ent.Author:
    properties:
      Name:
        description: Name holds the value of the "Name" field.
        type: string
      edges:
        $ref: '#/definitions/ent.AuthorEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the AuthorQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.AuthorEdges:
    properties:
      owner:
        description: Owner holds the value of the owner edge.
        items:
          $ref: '#/definitions/ent.Research'
        type: array
      writer:
        description: Writer holds the value of the writer edge.
        items:
          $ref: '#/definitions/ent.Book'
        type: array
    type: object
  ent.Book:
    properties:
      Barcode:
        description: Barcode holds the value of the "Barcode" field.
        type: string
      BookName:
        description: BookName holds the value of the "BookName" field.
        type: string
      BookPage:
        description: BookPage holds the value of the "BookPage" field.
        type: integer
      author_ID:
        type: integer
      category_id:
        type: integer
      edges:
        $ref: '#/definitions/ent.BookEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BookQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      status_ID:
        type: integer
      user_ID:
        type: integer
    type: object
  ent.BookEdges:
    properties:
      author:
        $ref: '#/definitions/ent.Author'
        description: Author holds the value of the author edge.
        type: object
      booklist:
        description: Booklist holds the value of the booklist edge.
        items:
          $ref: '#/definitions/ent.Bookborrow'
        type: array
      category:
        $ref: '#/definitions/ent.Category'
        description: Category holds the value of the category edge.
        type: object
      status:
        $ref: '#/definitions/ent.Status'
        description: Status holds the value of the status edge.
        type: object
      user:
        $ref: '#/definitions/ent.User'
        description: User holds the value of the user edge.
        type: object
    type: object
  ent.Bookborrow:
    properties:
      BORROW_DATE:
        description: BORROWDATE holds the value of the "BORROW_DATE" field.
        type: string
      DAY_OF_BORROW:
        description: DAYOFBORROW holds the value of the "DAY_OF_BORROW" field.
        type: integer
      PHONE_NUMBER:
        description: PHONENUMBER holds the value of the "PHONE_NUMBER" field.
        type: string
      PICKUP:
        description: PICKUP holds the value of the "PICKUP" field.
        type: string
      book_ID:
        type: integer
      edges:
        $ref: '#/definitions/ent.BookborrowEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BookborrowQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      servicepoint_ID:
        type: integer
      status_ID:
        type: integer
      user_ID:
        type: integer
    type: object
  ent.BookborrowEdges:
    properties:
      book:
        $ref: '#/definitions/ent.Book'
        description: BOOK holds the value of the BOOK edge.
        type: object
      borrowed:
        description: Borrowed holds the value of the borrowed edge.
        items:
          $ref: '#/definitions/ent.Bookreturn'
        type: array
      servicepoint:
        $ref: '#/definitions/ent.ServicePoint'
        description: SERVICEPOINT holds the value of the SERVICEPOINT edge.
        type: object
      status:
        $ref: '#/definitions/ent.Status'
        description: STATUS holds the value of the STATUS edge.
        type: object
      user:
        $ref: '#/definitions/ent.User'
        description: USER holds the value of the USER edge.
        type: object
    type: object
  ent.Booking:
    properties:
      BOOKING_DATE:
        description: BOOKINGDATE holds the value of the "BOOKING_DATE" field.
        type: string
      BORROW_ITEM:
        description: BORROWITEM holds the value of the "BORROW_ITEM" field.
        type: integer
      PHONE_NUMBER:
        description: PHONENUMBER holds the value of the "PHONE_NUMBER" field.
        type: string
      TIME_LEFT:
        description: TIMELEFT holds the value of the "TIME_LEFT" field.
        type: string
      USER_NUMBER:
        description: USERNUMBER holds the value of the "USER_NUMBER" field.
        type: integer
      client_ID:
        type: integer
      edges:
        $ref: '#/definitions/ent.BookingEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BookingQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      servicepoint_ID:
        type: integer
      user_ID:
        type: integer
    type: object
  ent.BookingEdges:
    properties:
      getservice:
        $ref: '#/definitions/ent.ServicePoint'
        description: Getservice holds the value of the getservice edge.
        type: object
      usedby:
        $ref: '#/definitions/ent.User'
        description: Usedby holds the value of the usedby edge.
        type: object
      using:
        $ref: '#/definitions/ent.ClientEntity'
        description: Using holds the value of the using edge.
        type: object
    type: object
  ent.Bookreturn:
    properties:
      DAMAGED_POINT:
        description: DAMAGEDPOINT holds the value of the "DAMAGED_POINT" field.
        type: integer
      DAMAGED_POINTNAME:
        description: DAMAGEDPOINTNAME holds the value of the "DAMAGED_POINTNAME" field.
        type: string
      LOST:
        description: LOST holds the value of the "LOST" field.
        type: string
      RETURN_TIME:
        description: RETURNTIME holds the value of the "RETURN_TIME" field.
        type: string
      client_ID:
        type: integer
      edges:
        $ref: '#/definitions/ent.BookreturnEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the BookreturnQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      location_ID:
        type: integer
      user_ID:
        type: integer
    type: object
  ent.BookreturnEdges:
    properties:
      location:
        $ref: '#/definitions/ent.Location'
        description: Location holds the value of the location edge.
        type: object
      mustreturn:
        $ref: '#/definitions/ent.Bookborrow'
        description: Mustreturn holds the value of the mustreturn edge.
        type: object
      user:
        $ref: '#/definitions/ent.User'
        description: User holds the value of the user edge.
        type: object
    type: object
  ent.Category:
    properties:
      CategoryName:
        description: CategoryName holds the value of the "CategoryName" field.
        type: string
      edges:
        $ref: '#/definitions/ent.CategoryEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the CategoryQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.CategoryEdges:
    properties:
      catof:
        description: Catof holds the value of the catof edge.
        items:
          $ref: '#/definitions/ent.Book'
        type: array
    type: object
  ent.ClientEntity:
    properties:
      CLIENT_NAME:
        description: CLIENTNAME holds the value of the "CLIENT_NAME" field.
        type: string
      edges:
        $ref: '#/definitions/ent.ClientEntityEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ClientEntityQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      status_ID:
        type: integer
    type: object
  ent.ClientEntityEdges:
    properties:
      booked:
        description: Booked holds the value of the booked edge.
        items:
          $ref: '#/definitions/ent.Booking'
        type: array
      state:
        $ref: '#/definitions/ent.Status'
        description: State holds the value of the state edge.
        type: object
    type: object
  ent.Location:
    properties:
      LOCATION_NAME:
        description: LOCATIONNAME holds the value of the "LOCATION_NAME" field.
        type: string
      edges:
        $ref: '#/definitions/ent.LocationEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the LocationQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.LocationEdges:
    properties:
      returnfrom:
        description: Returnfrom holds the value of the returnfrom edge.
        items:
          $ref: '#/definitions/ent.Bookreturn'
        type: array
    type: object
  ent.Preemption:
    properties:
      Phonenumber:
        description: Phonenumber holds the value of the "Phonenumber" field.
        type: string
      PreemptTime:
        description: PreemptTime holds the value of the "PreemptTime" field.
        type: string
      Surrogateid:
        description: Surrogateid holds the value of the "Surrogateid" field.
        type: string
      Surrogatephone:
        description: Surrogatephone holds the value of the "Surrogatephone" field.
        type: string
      edges:
        $ref: '#/definitions/ent.PreemptionEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PreemptionQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      purposeID:
        type: integer
      roomID:
        type: integer
      user_ID:
        type: integer
    type: object
  ent.PreemptionEdges:
    properties:
      purposeID:
        $ref: '#/definitions/ent.Purpose'
        description: PurposeID holds the value of the PurposeID edge.
        type: object
      roomID:
        $ref: '#/definitions/ent.Roominfo'
        description: RoomID holds the value of the RoomID edge.
        type: object
      userID:
        $ref: '#/definitions/ent.User'
        description: UserID holds the value of the User_ID edge.
        type: object
    type: object
  ent.Purpose:
    properties:
      PurposeName:
        description: PurposeName holds the value of the "PurposeName" field.
        type: string
      edges:
        $ref: '#/definitions/ent.PurposeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the PurposeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.PurposeEdges:
    properties:
      preemption:
        description: Preemption holds the value of the preemption edge.
        items:
          $ref: '#/definitions/ent.Preemption'
        type: array
    type: object
  ent.Research:
    properties:
      DATE:
        description: DATE holds the value of the "DATE" field.
        type: string
      DOC_NAME:
        description: DOCNAME holds the value of the "DOC_NAME" field.
        type: string
      PAGE_NUMBER:
        description: PAGENUMBER holds the value of the "PAGE_NUMBER" field.
        type: integer
      YEAR_NUMBER:
        description: YEARNUMBER holds the value of the "YEAR_NUMBER" field.
        type: integer
      edges:
        $ref: '#/definitions/ent.ResearchEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ResearchQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      owner_ID:
        type: integer
      type_ID:
        type: integer
      user_ID:
        type: integer
    type: object
  ent.ResearchEdges:
    properties:
      docType:
        $ref: '#/definitions/ent.Researchtype'
        description: DocType holds the value of the docType edge.
        type: object
      myDoc:
        $ref: '#/definitions/ent.Author'
        description: MyDoc holds the value of the myDoc edge.
        type: object
      register:
        $ref: '#/definitions/ent.User'
        description: Register holds the value of the register edge.
        type: object
    type: object
  ent.Researchtype:
    properties:
      TYPE_NAME:
        description: TYPENAME holds the value of the "TYPE_NAME" field.
        type: string
      edges:
        $ref: '#/definitions/ent.ResearchtypeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ResearchtypeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.ResearchtypeEdges:
    properties:
      researchType:
        description: ResearchType holds the value of the researchType edge.
        items:
          $ref: '#/definitions/ent.Research'
        type: array
    type: object
  ent.Role:
    properties:
      ROLE_NAME:
        description: ROLENAME holds the value of the "ROLE_NAME" field.
        type: string
      edges:
        $ref: '#/definitions/ent.RoleEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RoleQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.RoleEdges:
    properties:
      role:
        description: Role holds the value of the role edge.
        items:
          $ref: '#/definitions/ent.User'
        type: array
    type: object
  ent.Roominfo:
    properties:
      RoomID:
        description: RoomID holds the value of the "RoomID" field.
        type: string
      RoomNo:
        description: RoomNo holds the value of the "RoomNo" field.
        type: string
      RoomStatus:
        description: RoomStatus holds the value of the "RoomStatus" field.
        type: string
      RoomTime:
        description: RoomTime holds the value of the "RoomTime" field.
        type: string
      RoomType:
        description: RoomType holds the value of the "RoomType" field.
        type: string
      edges:
        $ref: '#/definitions/ent.RoominfoEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the RoominfoQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.RoominfoEdges:
    properties:
      preemption:
        description: Preemption holds the value of the preemption edge.
        items:
          $ref: '#/definitions/ent.Preemption'
        type: array
    type: object
  ent.ServicePoint:
    properties:
      COUNTER_NUMBER:
        description: COUNTERNUMBER holds the value of the "COUNTER_NUMBER" field.
        type: string
      edges:
        $ref: '#/definitions/ent.ServicePointEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the ServicePointQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.ServicePointEdges:
    properties:
      from:
        description: From holds the value of the from edge.
        items:
          $ref: '#/definitions/ent.Bookborrow'
        type: array
      servicepoint:
        description: Servicepoint holds the value of the servicepoint edge.
        items:
          $ref: '#/definitions/ent.Booking'
        type: array
    type: object
  ent.Status:
    properties:
      STATUS_NAME:
        description: STATUSNAME holds the value of the "STATUS_NAME" field.
        type: string
      edges:
        $ref: '#/definitions/ent.StatusEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the StatusQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.StatusEdges:
    properties:
      status:
        description: Status holds the value of the status edge.
        items:
          $ref: '#/definitions/ent.ClientEntity'
        type: array
      statusbookborrow:
        description: Statusbookborrow holds the value of the statusbookborrow edge.
        items:
          $ref: '#/definitions/ent.Bookborrow'
        type: array
      statusofbook:
        description: Statusofbook holds the value of the statusofbook edge.
        items:
          $ref: '#/definitions/ent.Book'
        type: array
    type: object
  ent.User:
    properties:
      PASSWORD:
        description: PASSWORD holds the value of the "PASSWORD" field.
        type: string
      USER_EMAIL:
        description: USEREMAIL holds the value of the "USER_EMAIL" field.
        type: string
      USER_NAME:
        description: USERNAME holds the value of the "USER_NAME" field.
        type: string
      edges:
        $ref: '#/definitions/ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      role_ID:
        type: integer
    type: object
  ent.UserEdges:
    properties:
      addby:
        description: Addby holds the value of the addby edge.
        items:
          $ref: '#/definitions/ent.Book'
        type: array
      booking:
        description: Booking holds the value of the booking edge.
        items:
          $ref: '#/definitions/ent.Booking'
        type: array
      borrow:
        description: Borrow holds the value of the borrow edge.
        items:
          $ref: '#/definitions/ent.Bookborrow'
        type: array
      position:
        $ref: '#/definitions/ent.Role'
        description: Position holds the value of the position edge.
        type: object
      preemption:
        description: Preemption holds the value of the preemption edge.
        items:
          $ref: '#/definitions/ent.Preemption'
        type: array
      record:
        description: Record holds the value of the record edge.
        items:
          $ref: '#/definitions/ent.Research'
        type: array
      return:
        description: Return holds the value of the return edge.
        items:
          $ref: '#/definitions/ent.Bookreturn'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API Playlist Vidoe
  version: "1.0"
paths:
  /Authors:
    get:
      description: list author entities
      operationId: list-author
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Author'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List author entities
    post:
      consumes:
      - application/json
      description: Create author
      operationId: create-author
      parameters:
      - description: Author entity
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/ent.Author'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Author'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create author
  /Authors/{id}:
    delete:
      description: get author by ID
      operationId: delete-author
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a author entity by ID
    get:
      description: get author by ID
      operationId: get-author
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Author'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a author entity by ID
    put:
      consumes:
      - application/json
      description: update author by ID
      operationId: update-author
      parameters:
      - description: Author ID
        in: path
        name: id
        required: true
        type: integer
      - description: Author entity
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/ent.Author'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Author'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a author entity by ID
  /ResearchTypes:
    get:
      description: list researchtype entities
      operationId: list-researchtype
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Researchtype'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List researchtype entities
    post:
      consumes:
      - application/json
      description: Create researchtype
      operationId: create-researchtype
      parameters:
      - description: Researchtype entity
        in: body
        name: researchtype
        required: true
        schema:
          $ref: '#/definitions/ent.Researchtype'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Researchtype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create researchtype
  /ResearchTypes/{id}:
    delete:
      description: get researchtype by ID
      operationId: delete-researchtype
      parameters:
      - description: Researchtype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a researchtype entity by ID
    get:
      description: get researchtype by ID
      operationId: get-researchtype
      parameters:
      - description: Researchtype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Researchtype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a researchtype entity by ID
    put:
      consumes:
      - application/json
      description: update researchtype by ID
      operationId: update-researchtype
      parameters:
      - description: Researchtype ID
        in: path
        name: id
        required: true
        type: integer
      - description: Researchtype entity
        in: body
        name: researchtype
        required: true
        schema:
          $ref: '#/definitions/ent.Researchtype'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Researchtype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a researchtype entity by ID
  /bookborrows:
    get:
      description: list bookborrow entities
      operationId: list-bookborrow
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Bookborrow'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List bookborrow entities
    post:
      consumes:
      - application/json
      description: Create bookborrow
      operationId: create-bookborrow
      parameters:
      - description: Bookborrow entity
        in: body
        name: bookborrow
        required: true
        schema:
          $ref: '#/definitions/controllers.Bookborrow'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Bookborrow'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create bookborrow
  /bookborrows/{id}:
    delete:
      description: get bookborrow by ID
      operationId: delete-bookborrow
      parameters:
      - description: Bookborrow ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a bookborrow entity by ID
    get:
      description: get bookborrow by ID
      operationId: get-bookborrow
      parameters:
      - description: Bookborrow ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Bookborrow'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a bookborrow entity by ID
    put:
      consumes:
      - application/json
      description: update bookborrow by ID
      operationId: update-bookborrow
      parameters:
      - description: Bookborrow ID
        in: path
        name: id
        required: true
        type: integer
      - description: Bookborrow entity
        in: body
        name: bookborrow
        required: true
        schema:
          $ref: '#/definitions/ent.Bookborrow'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Bookborrow'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a bookborrow entity by ID
  /bookborrowusers/{id}:
    get:
      description: get bookborrowuser by ID
      operationId: get-bookborrowuser
      parameters:
      - description: bookborrowuser ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Bookborrow'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a bookborrowuser entity by ID
  /bookfrees:
    get:
      description: list bookfrees entities
      operationId: list-bookfrees
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Book'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List bookfrees entities
  /bookings:
    get:
      description: list booking entities
      operationId: list-booking
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Booking'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List booking entities
    post:
      consumes:
      - application/json
      description: Create booking
      operationId: create-booking
      parameters:
      - description: Booking entity
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/controllers.Booking'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Booking'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create booking
  /bookings/{id}:
    delete:
      description: get booking by ID
      operationId: delete-booking
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a booking entity by ID
    get:
      description: get booking by ID
      operationId: get-booking
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Booking'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a booking entity by ID
    put:
      consumes:
      - application/json
      description: update booking by ID
      operationId: update-booking
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      - description: Booking entity
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/ent.Booking'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Booking'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a booking entity by ID
  /bookreturns:
    get:
      description: list bookreturn entities
      operationId: list-bookreturn
      parameters:
      - description: Name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Bookreturn'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List bookreturn entities
    post:
      consumes:
      - application/json
      description: Create bookreturn
      operationId: create-bookreturn
      parameters:
      - description: bookreturn entity
        in: body
        name: bookreturn
        required: true
        schema:
          $ref: '#/definitions/controllers.Bookreturn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Bookreturn'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create bookreturn
  /bookreturns/{id}:
    delete:
      description: get bookreturn by ID
      operationId: delete-bookreturn
      parameters:
      - description: Bookreturn ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a bookreturn entity by ID
    get:
      description: get bookreturn by ID
      operationId: get-bookreturn
      parameters:
      - description: Bookreturn ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Bookreturn'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a bookreturn entity by ID
  /books:
    get:
      description: list book entities
      operationId: list-book
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Book'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List book entities
    post:
      consumes:
      - application/json
      description: Create book
      operationId: create-book
      parameters:
      - description: Book entity
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/controllers.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create book
  /books/{id}:
    delete:
      description: get book by ID
      operationId: delete-book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a book entity by ID
    get:
      description: get book by ID
      operationId: get-book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a book entity bygo mod  ID
    put:
      consumes:
      - application/json
      description: update book by ID
      operationId: update-book
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book entity
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/ent.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a book entity by ID
  /categorys:
    get:
      description: list category entities
      operationId: list-category
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Category'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List category entities
    post:
      consumes:
      - application/json
      description: Create category
      operationId: create-category
      parameters:
      - description: Category entity
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/ent.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create category
  /categorys/{id}:
    delete:
      description: get category by ID
      operationId: delete-category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a category entity by ID
    get:
      description: get category by ID
      operationId: get-category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a category entity by ID
    put:
      consumes:
      - application/json
      description: update category by ID
      operationId: update-category
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Category entity
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/ent.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a category entity by ID
  /cliententitys:
    get:
      description: list cliententity entities
      operationId: list-cliententity
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.ClientEntity'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List cliententity entities
    post:
      consumes:
      - application/json
      description: Create cliententity
      operationId: create-cliententity
      parameters:
      - description: ClientEntity entity
        in: body
        name: cliententity
        required: true
        schema:
          $ref: '#/definitions/ent.ClientEntity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ClientEntity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create cliententity
  /cliententitys/{id}:
    delete:
      description: get cliententity by ID
      operationId: delete-cliententity
      parameters:
      - description: Cliententity ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a cliententity entity by ID
    get:
      description: get cliententity by ID
      operationId: get-cliententity
      parameters:
      - description: ClientEntity ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ClientEntity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a cliententity entity by ID
    put:
      consumes:
      - application/json
      description: update cliententity by ID
      operationId: update-cliententity
      parameters:
      - description: ClientEntity ID
        in: path
        name: id
        required: true
        type: integer
      - description: ClientEntity entity
        in: body
        name: cliententity
        required: true
        schema:
          $ref: '#/definitions/controllers.ClientEntity'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ClientEntity'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a cliententity entity by ID
  /locations:
    get:
      description: list location entities
      operationId: list-location
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Location'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List location entities
    post:
      consumes:
      - application/json
      description: Create location
      operationId: create-location
      parameters:
      - description: location entity
        in: body
        name: Location
        required: true
        schema:
          $ref: '#/definitions/ent.Location'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Location'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create location
  /locations/{id}:
    delete:
      description: get location by ID
      operationId: delete-location
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a location entity by ID
    get:
      description: get location by ID
      operationId: get-location
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Location'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a locationr entity by ID
    put:
      consumes:
      - application/json
      description: update location by ID
      operationId: update-location
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: integer
      - description: Location entity
        in: body
        name: location
        required: true
        schema:
          $ref: '#/definitions/ent.Location'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Location'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a location entity by ID
  /preemptions:
    get:
      description: list Preemption entities
      operationId: list-preemption
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Preemption'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List preemption entities
    post:
      consumes:
      - application/json
      description: Create preemption
      operationId: create-preemption
      parameters:
      - description: Preemption entity
        in: body
        name: preemption
        required: true
        schema:
          $ref: '#/definitions/controllers.Preemption'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Preemption'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create preemption
  /preemptions/{id}:
    get:
      description: get preemption by ID
      operationId: get-preemption
      parameters:
      - description: Preemption ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Preemption'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a preemption entity by ID
  /purposes:
    get:
      description: list purpose entities
      operationId: list-purpose
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Purpose'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List purpose entities
  /purposes/{id}:
    get:
      description: get purpose by ID
      operationId: get-purpose
      parameters:
      - description: Purpose ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Purpose'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a purpose entity by ID
  /researches:
    get:
      description: list research entities
      operationId: list-research
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Research'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List research entities
    post:
      consumes:
      - application/json
      description: Create research
      operationId: create-research
      parameters:
      - description: Research entity
        in: body
        name: research
        required: true
        schema:
          $ref: '#/definitions/controllers.Research'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Research'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create research
  /researches/{id}:
    delete:
      description: get research by ID
      operationId: delete-research
      parameters:
      - description: Research ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a research entity by ID
    get:
      description: get research by ID
      operationId: get-rearch
      parameters:
      - description: Research ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Research'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a research entity by ID
    put:
      consumes:
      - application/json
      description: update research by ID
      operationId: update-research
      parameters:
      - description: Research ID
        in: path
        name: id
        required: true
        type: integer
      - description: Research entity
        in: body
        name: research
        required: true
        schema:
          $ref: '#/definitions/ent.Research'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Research'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a research entity by ID
  /roles:
    get:
      description: list role entities
      operationId: list-role
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Role'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List role entities
    post:
      consumes:
      - application/json
      description: Create role
      operationId: create-role
      parameters:
      - description: Role entity
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/ent.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create role
  /roles/{id}:
    delete:
      description: get role by ID
      operationId: delete-role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a role entity by ID
    get:
      description: get role by ID
      operationId: get-role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a role entity by ID
    put:
      consumes:
      - application/json
      description: update role by ID
      operationId: update-role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Role entity
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/ent.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Role'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a role entity by ID
  /roominfos:
    get:
      description: list roominfo entities
      operationId: list-roominfo
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Roominfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List roominfo entities
  /roominfos/{id}:
    delete:
      description: get roominfo by ID
      operationId: delete-roominfo
      parameters:
      - description: Roominfo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a roominfo entity by ID
    get:
      description: get roominfo by ID
      operationId: get-roominfo
      parameters:
      - description: Roominfo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Roominfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a roominfo entity by ID
    put:
      consumes:
      - application/json
      description: update roominfo by ID
      operationId: update-roominfo
      parameters:
      - description: Roominfo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Roominfo entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.Roominfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Roominfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a roominfo entity by ID
  /servicepoints:
    get:
      description: list servicepoint entities
      operationId: list-servicepoint
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.ServicePoint'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List servicepoint entities
    post:
      consumes:
      - application/json
      description: Create servicepoint
      operationId: create-servicepoint
      parameters:
      - description: ServicePoint entity
        in: body
        name: ent.servicepoint
        required: true
        schema:
          $ref: '#/definitions/ent.ServicePoint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ServicePoint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create servicepoint
  /servicepoints/{id}:
    delete:
      description: get servicepoint by ID
      operationId: delete-servicepoint
      parameters:
      - description: ServicePoint ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a servicepoint entity by ID
    get:
      description: get servicepoint by ID
      operationId: get-servicepoint
      parameters:
      - description: ServicePoint ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ServicePoint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a servicepoint entity by ID
    put:
      consumes:
      - application/json
      description: update servicepoint by ID
      operationId: update-servicepoint
      parameters:
      - description: ServicePoint ID
        in: path
        name: id
        required: true
        type: integer
      - description: ServicePoint entity
        in: body
        name: servicepoint
        required: true
        schema:
          $ref: '#/definitions/ent.ServicePoint'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.ServicePoint'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a servicepoint entity by ID
  /statuss:
    get:
      description: list status entities
      operationId: list-status
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Status'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List status entities
    post:
      consumes:
      - application/json
      description: Create status
      operationId: create-status
      parameters:
      - description: Status entity
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/ent.Status'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create status
  /statuss/{id}:
    delete:
      description: get status by ID
      operationId: delete-status
      parameters:
      - description: Status ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a status entity by ID
    get:
      description: get status by ID
      operationId: get-status
      parameters:
      - description: Status ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a status entity by ID
    put:
      consumes:
      - application/json
      description: update status by ID
      operationId: update-status
      parameters:
      - description: Status ID
        in: path
        name: id
        required: true
        type: integer
      - description: Status entity
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/ent.Status'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a status entity by ID
  /users:
    get:
      description: list user entities
      operationId: list-user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List user entities
    post:
      consumes:
      - application/json
      description: Create user
      operationId: create-user
      parameters:
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create user
  /users/{id}:
    delete:
      description: get user by ID
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a user entity by ID
    get:
      description: get user by ID
      operationId: get-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a user entity by ID
    put:
      consumes:
      - application/json
      description: update user by ID
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a user entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
